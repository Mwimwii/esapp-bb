version: 0.2

phases:
  install:
    runtime-versions:
      docker: 18
    commands:
      - echo Installing app dependencies...
      - curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 > get_helm.sh
      - chmod 700 get_helm.sh
      - ./get_helm.sh
  pre_build:
    commands:
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-10)
      - IMAGE_TAG=${COMMIT_HASH}
      - AWS_ADDRESS=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPO_ADDRESS=$AWS_ADDRESS/$IMAGE_REPO_NAME
      - LATEST="$BRANCH-latest"
      - echo Logging in to Amazon ECR...
      - |
        aws ecr get-login-password --region $AWS_DEFAULT_REGION | \
          docker login --username AWS \
          --password-stdin \
          $AWS_ADDRESS
      - docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
      - |
        aws eks --region $AWS_DEFAULT_REGION \
          update-kubeconfig --name $AWS_CLUSTER_NAME
      - |
        kubectl create secret docker-registry regcred \
        --docker-server=https://index.docker.io/v1/ \
        --docker-username=$DOCKER_USERNAME \
        --docker-password=$DOCKER_PASSWORD \
        --docker-email=$DOCKER_EMAIL \
        --namespace=$NAMESPACE || true
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - |
        docker build -f ./docker/Dockerfile \
          --build-arg GITHUB_ACCESS_TOKEN \
          -t $IMAGE_REPO_NAME:$IMAGE_TAG \
          -t $IMAGE_REPO_NAME:$LATEST .
      - |
        docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPO_ADDRESS:$IMAGE_TAG
      - docker tag $IMAGE_REPO_NAME:$LATEST $REPO_ADDRESS:$LATEST
      - docker push $REPO_ADDRESS:$IMAGE_TAG
      - docker push $REPO_ADDRESS:$LATEST
      - |
        if expr "${use_rds}" : 'false' >/dev/null; then
          helm upgrade db ./kubernetes/helm/database \
          --install \
          --set namespace=$NAMESPACE \
          --set DB_VERSION=$DB_VERSION \
          --set DB_NAME=$DB_NAME \
          --set DB_USERNAME=$DB_USERNAME
        fi
      - echo Installing helm chart
      - |
        helm upgrade backend ./kubernetes/helm/app \
        --install \
        --set image.repo=$REPO_ADDRESS:$IMAGE_TAG \
        --set namespace=$NAMESPACE \
        --set DB_HOST=$DB_HOST \
        --set DB_PORT=$DB_PORT \
        --set DB_NAME=$DB_NAME \
        --set DB_USERNAME=$DB_USERNAME \
        --set ROOT_DOMAIN=$ROOT_DOMAIN \
        --set AWS_REGION=$AWS_DEFAULT_REGION \
        --set AWS_BUCKET=$ASSET_STORAGE_BUCKET \
        --set AIRTABLE_ID=$AIRTABLE_ID \
        --set AIRTABLE_KEY=$AIRTABLE_KEY \
        --set AWS_REGION=$AWS_REGION \
        --set HUBSPOT_KEY=$HUBSPOT_KEY \
        --set JOTFORM_API_KEY=$JOTFORM_API_KEY \
        --set TEMP_DIR=$TEMP_DIR \
        --set UPLOAD_DIR=$UPLOAD_DIR \
        --set REPORTS_DIR=$REPORTS_DIR
    # Post-build actions to run typeorm migration
  post_build:
    commands:
      - echo Running typeorm migration
      - |
      POD=$(kubectl get pods -n $NAMESPACE -l app=backend -o jsonpath='{.items[0].metadata.name}')
      kubectl exec -n $NAMESPACE $POD -- /bin/sh -c "cd /app && yarn typeorm schema:sync"